/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SwapExamples,
  SwapExamplesInterface,
} from "../../../contracts/MultiSwap.sol/SwapExamples";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactInputMultihop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMaximum",
        type: "uint256",
      },
    ],
    name: "swapExactOutputMultihop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a0b380380610a0b83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6109636100a86000398061014252806101fc52806102bc528061033d52806103b3528061046e52506109636000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806389a302711161005b57806389a30271146100d5578063c31c9c07146100dd578063e0bab4c4146100e5578063edd83557146100ed5761007d565b8063089fe6aa146100825780633b85cf6a146100a05780634aa4a4fc146100c0575b600080fd5b61008a610100565b6040516100979190610914565b60405180910390f35b6100b36100ae3660046107e7565b610106565b6040516100979190610924565b6100c861030b565b60405161009791906108ed565b6100c8610323565b6100c861033b565b6100c861035f565b6100b36100fb3660046107b7565b610377565b610bb881565b6000610128736b175474e89094c44da98b954eedeac495271d0f333085610511565b610167736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610669565b6040805160a08101909152600090806101c573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb873a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881736b175474e89094c44da98b954eedeac495271d0f60c0870161089b565b6040516020818303038152906040528152602001336001600160a01b031681526020014281526020018581526020018481525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f28c0498826040518263ffffffff1660e01b81526004016102469190610901565b602060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029891906107cf565b915082821015610304576102e2736b175474e89094c44da98b954eedeac495271d0f7f00000000000000000000000000000000000000000000000000000000000000006000610669565b610304736b175474e89094c44da98b954eedeac495271d0f3033858703610511565b5092915050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000610399736b175474e89094c44da98b954eedeac495271d0f333085610511565b6103d8736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610669565b6040805160a0810190915260009080610436736b175474e89094c44da98b954eedeac495271d0f610bb873a0b86991c6218b36c1d19d4a2e9eb0ce3606eb488173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260c0870161089b565b6040516020818303038152906040528152602001336001600160a01b03168152602001428152602001848152602001600081525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c04b8d59826040518263ffffffff1660e01b81526004016104b89190610901565b602060405180830381600087803b1580156104d257600080fd5b505af11580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a91906107cf565b9392505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b602083106105955780518252601f199092019160209182019101610576565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105f7576040519150601f19603f3d011682016040523d82523d6000602084013e6105fc565b606091505b509150915081801561062a57508051158061062a575080806020019051602081101561062757600080fd5b50515b610661576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1781529251825160009485949389169392918291908083835b602083106106e55780518252601f1990920191602091820191016106c6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610747576040519150601f19603f3d011682016040523d82523d6000602084013e61074c565b606091505b509150915081801561077a57508051158061077a575080806020019051602081101561077757600080fd5b50515b6107b0576040805162461bcd60e51b8152602060048201526002602482015261534160f01b604482015290519081900360640190fd5b5050505050565b6000602082840312156107c8578081fd5b5035919050565b6000602082840312156107e0578081fd5b5051919050565b600080604083850312156107f9578081fd5b50508035926020909101359150565b6001600160a01b03169052565b6000815160a0845280518060a0860152825b8181101561084457602081840181015160c0888401015201610827565b81811115610855578360c083880101525b506020840151915061086a6020860183610808565b6040848101519086015260608085015190860152608093840151938501939093525050601f01601f19160160c00190565b6bffffffffffffffffffffffff19606096871b811682526001600160e81b031960e896871b8116601484015294871b811660178301529290941b909216602b840152921b909116602e82015260420190565b6001600160a01b0391909116815260200190565b60006020825261050a6020830184610815565b62ffffff91909116815260200190565b9081526020019056fea2646970667358221220a2ab0e95ca90e560edd4be6db99cb9d167169a3aac5f9eb85f6985371f871f3764736f6c63430007060033";

type SwapExamplesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapExamplesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapExamples__factory extends ContractFactory {
  constructor(...args: SwapExamplesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapExamples> {
    return super.deploy(_swapRouter, overrides || {}) as Promise<SwapExamples>;
  }
  override getDeployTransaction(
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_swapRouter, overrides || {});
  }
  override attach(address: string): SwapExamples {
    return super.attach(address) as SwapExamples;
  }
  override connect(signer: Signer): SwapExamples__factory {
    return super.connect(signer) as SwapExamples__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapExamplesInterface {
    return new utils.Interface(_abi) as SwapExamplesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapExamples {
    return new Contract(address, _abi, signerOrProvider) as SwapExamples;
  }
}
